name: SLSA Provenance Generation and Verification

on:
  workflow_call:
    inputs:
      artifact_path:
        description: "The path to the generated artifacts."
        required: false
        type: string
        default: "./slsa-artifacts"
      node-version:
        required: false
        type: string
        default: '18.16.1'  # Default Node.js version

jobs:
  generate-and-verify-slsa:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set default artifact path if input is null
      - name: Set artifact path
        id: set-artifact-path
        run: |
          DEFAULT_PATH="./default-artifacts"
          if [ -z "${{ inputs.artifact_path }}" ]; then
            echo "Using default artifact path."
            echo "artifact_path=$DEFAULT_PATH" >> $GITHUB_ENV
            mkdir -p $DEFAULT_PATH
          else
            echo "artifact_path=${{ inputs.artifact_path }}" >> $GITHUB_ENV
            mkdir -p "${{ inputs.artifact_path }}"
          fi
          mkdir -p "${{ inputs.artifact_path }}/maven"
          mkdir -p "${{ inputs.artifact_path }}/javascript"
      # Step 3: Set up the Java environment
      - name: Set up Java environment
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
      - name: Check build environment versions (GIT, MAVEN, NPM, NODE, ANT)
        run: |
          git --version
          mvn -version
          npm --version
          node --version
         
      - name: Generate SBOM for Java and JavaScript/TypeScript
        run: |
          # Generate SBOM for Java (Maven)
          sudo npm install -g @cyclonedx/cdxgen
          #sudo chmod +x cdxgen
          sudo cdxgen -t maven -o ${{ env.artifact_path }}/maven/sbom.json

          # Generate SBOM for JavaScript/TypeScript (npm)
          sudo cdxgen -t npm -o ${{ env.artifact_path }}/javascript/sbom.json
      - name: Commit and push SBOM to repository
        run: |
          # Set up git configuration
          # Add SBOM to repository
             # Set git user identity
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git add ${{ env.artifact_path }}/maven/sbom.json
          git add ${{ env.artifact_path }}/javascript/sbom.json
          git commit -m "Add generated SBOM for project"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      # Step 4: Build Maven project
      - name: Build Maven project
        run: mvn clean package -DskipTests

      # Step 5: Generate SLSA Provenance for Maven
      # - name: Generate SLSA Provenance for Maven
      #   uses: slsa-framework/slsa-github-generator/.github/workflows/builder_maven_slsa3.yml@v2.0.0
      #   with:
      #     artifact_path: ${{ env.artifact_path }}/maven
      #     version: ${{ github.ref_name }}

      # # Step 6: Verify SLSA Provenance
      # - name: Verify SLSA Provenance
      #   run: |
      #     curl -Lo slsa-verifier https://github.com/slsa-framework/slsa-verifier/releases/latest/download/slsa-verifier-linux-amd64
      #     chmod +x slsa-verifier
      #     ./slsa-verifier verify-artifact \
      #       --provenance ${{ env.artifact_path }}/maven/target/*.slsa.json \
      #       --source github.com/${{ github.repository }} \
      #       --builder-id https://github.com/slsa-framework/slsa-github-generator \
      #       ${{ env.artifact_path }}/maven/target/*.jar > verification_output.txt 2>&1
      #     echo "<html><body><h2>Maven SLSA Verification Report</h2><pre>" > maven_verification_report.html
      #     cat verification_output.txt >> maven_verification_report.html
      #     echo "</pre></body></html>" >> maven_verification_report.html

      # # Step 7: Upload Verification Report
      # - name: Upload Verification Report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: maven-slsa-verification-report
      #     path: maven_verification_report.html

      # # Step 8: Upload Provenance
      # - name: Upload Provenance
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: maven-slsa-provenance
      #     path: |
      #       ${{ env.artifact_path }}/maven/target/*.slsa.json
