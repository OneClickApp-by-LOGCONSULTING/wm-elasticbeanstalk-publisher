name: SLSA Provenance Generation and Verification

on:
  workflow_call:
    inputs:
      artifact_path:
        description: "The path to the generated artifacts."
        required: false
        type: string
        default: "./slsa-artifacts"

jobs:
  generate-and-verify-slsa:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 1: Set default artifact path if input is null
      - name: Set artifact path
        id: set-artifact-path
        run: |
          DEFAULT_PATH="${{ inputs.artifact_path }}"
          if [ -z "${{ inputs.artifact_path }}" ]; then
            echo "artifact_path=$DEFAULT_PATH" >> $GITHUB_ENV
          else
            echo "artifact_path=${{ inputs.artifact_path }}" >> $GITHUB_ENV
          fi
          mkdir -p ${{ env.artifact_path }}

      # Step 2: Build and Generate Provenance for Maven
      - name: Set up Java environment
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Build Maven project
        run: mvn clean package -DskipTests

      # - name: Generate SLSA Provenance for Maven
      #   uses: slsa-framework/slsa-github-generator/.github/workflows/builder_maven_slsa3.yml@v2.0.0
      #   with:
      #     artifact_path: ${{ env.artifact_path }}/maven
      #     version: ${{ github.ref_name }}

      # - name: Verify SLSA Provenance for Maven
      #   run: |
      #     curl -Lo slsa-verifier https://github.com/slsa-framework/slsa-verifier/releases/latest/download/slsa-verifier-linux-amd64
      #     chmod +x slsa-verifier
      #     ./slsa-verifier verify-artifact \
      #       --provenance ${{ env.artifact_path }}/maven/target/*.slsa.json \
      #       --source github.com/${{ github.repository }} \
      #       --builder-id https://github.com/slsa-framework/slsa-github-generator \
      #       ${{ env.artifact_path }}/maven/target/*.jar > maven_verification_output.txt 2>&1
      #     echo "<html><body><h2>Maven SLSA Verification Report</h2><pre>" > maven_verification_report.html
      #     cat maven_verification_output.txt >> maven_verification_report.html
      #     echo "</pre></body></html>" >> maven_verification_report.html

      # # Step 3: Build and Generate Provenance for JavaScript/TypeScript
      # - name: Set up Node.js environment
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '16'

      # - name: Build JavaScript/TypeScript project
      #   run: |
      #     npm install
      #     npm run build

      # - name: Generate SLSA Provenance for JavaScript/TypeScript
      #   uses: slsa-framework/slsa-github-generator/.github/workflows/builder_node_slsa3.yml@v2.0.0
      #   with:
      #     artifact_path: ${{ env.artifact_path }}/javascript
      #     version: ${{ github.ref_name }}

      # - name: Verify SLSA Provenance for JavaScript/TypeScript
      #   run: |
      #     curl -Lo slsa-verifier https://github.com/slsa-framework/slsa-verifier/releases/latest/download/slsa-verifier-linux-amd64
      #     chmod +x slsa-verifier
      #     ./slsa-verifier verify-artifact \
      #       --provenance ${{ env.artifact_path }}/javascript/dist/*.slsa.json \
      #       --source github.com/${{ github.repository }} \
      #       --builder-id https://github.com/slsa-framework/slsa-github-generator \
      #       ${{ env.artifact_path }}/javascript/dist/*.js > javascript_verification_output.txt 2>&1
      #     echo "<html><body><h2>JavaScript/TypeScript SLSA Verification Report</h2><pre>" > javascript_verification_report.html
      #     cat javascript_verification_output.txt >> javascript_verification_report.html
      #     echo "</pre></body></html>" >> javascript_verification_report.html

      # # Step 4: Organize all artifacts in a single directory
      # - name: Prepare artifact storage
      #   run: |
      #     mkdir -p ./artifact-storage
      #     cp -r ${{ env.artifact_path }}/maven/target/* ./artifact-storage/
      #     cp -r ${{ env.artifact_path }}/javascript/dist/* ./artifact-storage/
      #     mv maven_verification_report.html ./artifact-storage/
      #     mv javascript_verification_report.html ./artifact-storage/

      # # Step 5: Upload all artifacts
      # - name: Upload artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: all-slsa-artifacts
      #     path: ./artifact-storage/
